# Copyright (c) 2019-2020 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT
name: hosted-advanced
on: [push]

jobs:
  job:
    name: ${{ matrix.os }}-hosted-advanced
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: '2019.11'
            vcpkgPackages: 'sqlite3'
            configuration: 'x64.*'
          - os: ubuntu-latest
            triplet: x64-linux
            vcpkgCommitId: '2019.11'
            vcpkgPackages: 'sqlite3'
            configuration: '.*Linux.*'
          - os: macos-latest
            triplet: x64-osx
            vcpkgCommitId: '2019.11'
            vcpkgPackages: 'sqlite3'
            configuration: '.*Linux.*'

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: dir
        run: find ${{ runner.workspace }}
        if: "!contains( matrix.os, 'windows')"
      - name: dir
        run: gci -recurse ${{ runner.workspace }}
        if: contains( matrix.os, 'windows')

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v0
        id: runvcpkg
        with:
          vcpkgArguments: '${{ matrix.vcpkgPackages }}'
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgTriplet: '${{ matrix.triplet }}'
      - name: Prints output of run-vcpkg's task
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET }}' "
      - name: Run CMake+Ninja
        uses: lukka/run-cmake@v0
        id: runcmake
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/cmakelists.txt/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildWithCMakeArgs: '-- -v'
          buildDirectory: '${{ runner.workspace }}/b/ninja/'
          cmakeAppendedArgs: '-G Ninja '
      - name: Run CMake+VS
        uses: lukka/run-cmake@v0
        if: contains( matrix.os, 'windows')
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/cmakelists.txt/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildDirectory: '${{ runner.workspace }}/b/vs16'
          cmakeAppendedArgs: '-G "Visual Studio 16 2019" -A x64'
      - name: 'Run CMake with CMakeSettings.json'
        uses: lukka/run-cmake@v0
        with:
          cmakeListsOrSettingsJson: CMakeSettingsJson
          cmakeSettingsJsonPath: '${{ github.workspace }}/cmakesettings.json/CMakeSettings.json'
          useVcpkgToolchainFile: true
          configurationRegexFilter: ${{ matrix.configuration }}

