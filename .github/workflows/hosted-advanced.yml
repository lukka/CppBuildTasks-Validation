# Copyright (c) 2019-2020-2021 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT
name: hosted-advanced-autocache
on: [push]

jobs:
  job:
    name: ${{ matrix.os }}-hosted-advanced
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            vcpkgPackages: 'sqlite3'
            configuration: 'x64.*'
          - os: ubuntu-latest
            triplet: x64-linux
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            vcpkgPackages: 'sqlite3'
            configuration: '.*Linux.*'
          - os: macos-latest
            triplet: x64-osx
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            vcpkgPackages: 'sqlite3'
            configuration: '.*Linux.*'

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: lukka/get-cmake@latest
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Restore artifacts, or Run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@dumplog
        id: runvcpkg
        with:
          vcpkgArguments: '${{ matrix.vcpkgPackages }}'
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgTriplet: '${{ matrix.triplet }}'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
      - name: Prints output of run-vcpkg's task
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "
      - name: Run CMake+EnvVar (Un*x)
        if: "!contains( matrix.os, 'windows')"
        uses: lukka/run-cmake@dumplog
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/cmakeliststxt/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildDirectory: '${{ runner.workspace }}/b/envvar_ninja'
          cmakeAppendedArgs: '-GNinja
          -DCMAKE_TOOLCHAIN_FILE=${ANDROID_HOME}/ndk-bundle/build/cmake/android.toolchain.cmake'
          buildWithCMake: false
      - name: Run CMake+Ninja
        uses: lukka/run-cmake@dumplog
        id: runcmake
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/cmakeliststxt/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildWithCMakeArgs: '-- -v'
          buildDirectory: '${{ runner.workspace }}/b/ninja/'
          cmakeAppendedArgs: '-G Ninja '
      - name: Run CMake+VS
        uses: lukka/run-cmake@dumplog
        if: contains( matrix.os, 'windows')
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/cmakeliststxt/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildDirectory: '${{ runner.workspace }}/b/vs16'
          cmakeAppendedArgs: '-G"Visual Studio 16 2019" -Ax64'
      - name: 'Run CMake with CMakeSettings.json'
        uses: lukka/run-cmake@dumplog
        with:
          cmakeListsOrSettingsJson: CMakeSettingsJson
          cmakeSettingsJsonPath: '${{ github.workspace }}/cmakesettingsjson/CMakeSettings.json'
          useVcpkgToolchainFile: true
          configurationRegexFilter: ${{ matrix.configuration }}
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash

